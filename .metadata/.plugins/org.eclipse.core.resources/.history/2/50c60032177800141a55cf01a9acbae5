import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;


class Utili {

	static Scanner fileRead;
	
	//---User Supplied Param's---//
	static int simulationDuration=-1;								//The amount of time the simulation should run
	static int quantum=-1;											//The quantum used in the Round Robin algo
	static int contextSwitch=-1;									//The time it takes to store and restore a process so it can be used at a later time (MicroSeconds)
	static int avgProcessLength=-1;									//The average used to calculate the total CPU time of a newly created process 
	static int creationMean=-1;										//The mean value used to calculate the time till next process creation									
	static int IO_Percent=-1;										//The percentage of processes that are I/O Bound, the rest will be CPU bound
	static int i_oServTime=-1;										//The time need for service an I/O fault. Generated randomly based on a user supplied parameter 
	//---------------------------//
	
	
	/**
	 * Initializes all the user entered parameters of the CPU Scheduler
	 * for the information in the file provided to the method
	 * @param fileName
	 * @return True if file read was successful, False otherwise
	 */
	public static boolean init(String fileName) {
		File file = new File(fileName);
		try {
			fileRead = new Scanner(file);
			try{
				printUserParams();
			} catch(Exception e){
				System.out.println("Class: Utili Method: ScanFile: scanner had null value or did not meet required user inputs");
			}
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		return true;
	}


/*
 * User Supplied param get/set methods
 * BEGIN
 */
	public static int getSimulationDuration() {
		return simulationDuration;
	}


	public void setSimulationDuration(int simulationDuration) {
		Utili.simulationDuration = simulationDuration;
	}


	public int getQuantum() {
		return quantum;
	}


	public void setQuantum(int quantum) {
		Utili.quantum = quantum;
	}


	public int getContextSwitch() {
		return contextSwitch;
	}


	public void setContextSwitch(int contextSwitch) {
		Utili.contextSwitch = contextSwitch;
	}


	public int getAvgProcessLength() {
		return avgProcessLength;
	}


	public void setAvgProcessLength(int avgProcessLength) {
		Utili.avgProcessLength = avgProcessLength;
	}


	public int getCreationMean() {
		return creationMean;
	}


	public void setCreationMean(int creationMean) {
		Utili.creationMean = creationMean;
	}


	public int getI_oServTime() {
		return i_oServTime;
	}


	public void setI_oServTime(int i_oServTime) {
		Utili.i_oServTime = i_oServTime;
	}
	
	/*
	 * User Supplied param get/set methods
	 * END
	 */
	
	//Scans through the file and extracts all of the user supplied parameters
	public static boolean scanFile(Scanner scanner){
		System.out.println("simulationDuratio: " + simulationDuration);
		if(scanner!=null){
			scanner.nextLine();
			for (int i = 0; scanner.hasNext(); i++) {
			switch (scanner.next()) {
			case "simulationDuration":
				simulationDuration = scanner.nextInt();
				break;
			case "quantum":
				quantum = scanner.nextInt();
				break;
			case "contextSwitch":
				contextSwitch = scanner.nextInt();
				break;
			case "avgProcessLength":
				avgProcessLength = scanner.nextInt();
				break;
			case "creationMean":
				creationMean = scanner.nextInt();
				break;
			case "IO_Percent":
				IO_Percent = scanner.nextInt();
				break;
			case "i_oServTime":
				i_oServTime = scanner.nextInt();
				break;
			default:
				break;
			}
			if(scanner.hasNext()){
			scanner.nextLine();
			}
			}
			//Checks to verify all required user params have been meet. 
			if(simulationDuration>=0&&quantum>=0&&contextSwitch>=0&&avgProcessLength>=0&&creationMean>=0&&IO_Percent>=0&&i_oServTime>=0){
			return true;
			}else{
				return false;
			}
		}
		else{
		return false;
		}
	}
	
	//Prints the user parameters
	public static void printUserParams(){
		System.out.println("simulationDuration: " + simulationDuration);
		System.out.println("quantum: " + quantum);
		System.out.println("contextSwitch: " + contextSwitch);
		System.out.println("avgProcessLength: " + avgProcessLength);
		System.out.println("creationMean: " + creationMean);
		System.out.println("IO_Percent: " + IO_Percent);
		System.out.println("i_oServTime: " + i_oServTime);
	}
}
