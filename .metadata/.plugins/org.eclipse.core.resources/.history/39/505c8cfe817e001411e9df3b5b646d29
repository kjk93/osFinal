
public class CPU {
	Process processOnCpu;
	float cpuTime=0;
	public CPU() {
		
	}
	
	public void putOnCPU(Process process){
		cpuTime =0;
		processOnCpu = process;
		while(cpuTime<Utili.quantum){
		float burstLength = Utili.BurstLength(processOnCpu.isProcessType());
		cpuTime = cpuTime + burstLength;
		if(burstLength<Utili.quantum&&cpuTime<Utili.quantum){
			processOnCpu.setCpuTimeRemaining(burstLength);
		}else{
			processOnCpu.setCpuTimeRemaining(Utili.quantum-(cpuTime-burstLength));
		}		
		//Generate IO Interrupt
		Controler.createIO_Interrupt();
		}
		//Generate Quantum Expired
	}
	
	public static void processEvent(Events event){
		if(event.eventType.equals(Events.newProcess)){
			if(event.getCpu_Time_Remaining()>Utili.quantum){
				event.setCpu_Time_Remaining(event.getCpu_Time_Remaining()-Utili.quantum);
			}else{
				
			}
		}
	}
}
